"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = require("express");
const multer_1 = __importDefault(require("multer"));
const CreateUserController_1 = require("./controllers/user/CreateUserController");
const AuthUserController_1 = require("./controllers/user/AuthUserController");
const UpdateUserController_1 = require("./controllers/user/UpdateUserController");
const DetailUserController_1 = require("./controllers/user/DetailUserController");
const DogapiController_1 = require("./controllers/api/DogapiController");
const ForgotPassword_1 = require("./controllers/api/ForgotPassword");
const isAuthenticated_1_1 = require("./middlewares/isAuthenticated.1");
const CreatePetController_1 = require("./controllers/pets/CreatePetController");
const DetailPetController_1 = require("./controllers/pets/DetailPetController");
const DetailPetOneController_1 = require("./controllers/pets/DetailPetOneController");
const DeletePetController_1 = require("./controllers/pets/DeletePetController");
const CuriosidadeController_1 = require("./controllers/api/CuriosidadeController");
const RegisterVaccinesController_1 = require("./controllers/pets/RegisterVaccinesController");
const DetailVaccinesController_1 = require("./controllers/pets/DetailVaccinesController");
const UpdateUserDataController_1 = require("./controllers/user/UpdateUserDataController");
const RegisterExamController_1 = require("./controllers/pets/RegisterExamController");
const DetailExamController_1 = require("./controllers/pets/DetailExamController");
const DetailPetVaccinesOneController_1 = require("./controllers/pets/DetailPetVaccinesOneController");
const DetailPetExamOneController_1 = require("./controllers/pets/DetailPetExamOneController");
const DeleteVaccineController_1 = require("./controllers/pets/DeleteVaccineController");
const DeleteExamController_1 = require("./controllers/pets/DeleteExamController");
const UpdateVaccineController_1 = require("./controllers/pets/UpdateVaccineController");
const UpdateExamController_1 = require("./controllers/pets/UpdateExamController");
const BlogPetController_1 = require("./controllers/pets/BlogPetController");
const DetailBlogController_1 = require("./controllers/pets/DetailBlogController");
const UpdatePetController_1 = require("./controllers/pets/UpdatePetController");
const DeleteBlogController_1 = require("./controllers/pets/DeleteBlogController");
const UserDeleteController_1 = require("./controllers/user/UserDeleteController");
const UpdateBlogController_1 = require("./controllers/pets/UpdateBlogController");
const multer_2 = __importDefault(require("./config/multer"));
const router = (0, express_1.Router)();
exports.router = router;
const upload = (0, multer_1.default)(multer_2.default.upload("./tmp"));
router.post('/api/users', new CreateUserController_1.CreateUserController().handle);
router.post('/api/session', new AuthUserController_1.AuthUserController().handle);
router.post('/users', new CreateUserController_1.CreateUserController().handle);
router.put('/api/updatepassword', isAuthenticated_1_1.isAuthenticated, new UpdateUserController_1.UpdateUserController().handle);
router.get('/api/me', isAuthenticated_1_1.isAuthenticated, new DetailUserController_1.DetailUserController().handle);
router.get('/api/dogapi', new DogapiController_1.DogapiController().handle);
router.post('/api/pet', upload.single('file'), new CreatePetController_1.CreatePetController().handle);
router.post('/api/resetpassword', new ForgotPassword_1.ForgotPassword().handle);
router.get('/api/detailpet', isAuthenticated_1_1.isAuthenticated, new DetailPetController_1.DetailPetController().handle);
router.get('/api/detailpetOne/:id_pet', new DetailPetOneController_1.DetailPetOneController().handle);
router.delete('/api/deletePet', isAuthenticated_1_1.isAuthenticated, new DeletePetController_1.DeletePetController().handle);
router.get('/api/curiosidades', isAuthenticated_1_1.isAuthenticated, new CuriosidadeController_1.CuriosidadeController().handle);
router.post('/api/registerVaccine', isAuthenticated_1_1.isAuthenticated, upload.single('file'), new RegisterVaccinesController_1.RegisterVaccinesController().handle);
router.post('/api/registerExam', isAuthenticated_1_1.isAuthenticated, upload.single('img_laudo'), new RegisterExamController_1.RegisterExamController().handle);
router.get('/api/detailVaccines/:pet_id', new DetailVaccinesController_1.DetailVaccinesController().handle);
router.get('/api/detailExames/:pet_id', new DetailExamController_1.DetailExamController().handle);
router.post('/api/userUpdate', upload.single('file'), new UpdateUserDataController_1.UpdateUserDataController().handle);
router.get('/api/VaccineOne/:id_vacinne', isAuthenticated_1_1.isAuthenticated, new DetailPetVaccinesOneController_1.DetailPetVaccinesOneController().handle);
router.get('/api/ExamOne/:id_exame', isAuthenticated_1_1.isAuthenticated, new DetailPetExamOneController_1.DetailPetExamOneController().handle);
router.delete('/api/deleteVaccine', isAuthenticated_1_1.isAuthenticated, new DeleteVaccineController_1.DeleteVaccineController().handle);
router.delete('/api/deleteExame', isAuthenticated_1_1.isAuthenticated, new DeleteExamController_1.DeleExamController().handle);
router.put('/api/updatevaccine', isAuthenticated_1_1.isAuthenticated, new UpdateVaccineController_1.UpdateVaccineController().handle);
router.put('/api/updateexame', isAuthenticated_1_1.isAuthenticated, new UpdateExamController_1.UpdateExamController().handle);
router.post('/api/postBlog', isAuthenticated_1_1.isAuthenticated, upload.single('img_blog'), new BlogPetController_1.BlogPetController().handle);
router.get('/api/detailBlog', isAuthenticated_1_1.isAuthenticated, new DetailBlogController_1.DetailBlogController().handle);
router.put('/api/updatePet', isAuthenticated_1_1.isAuthenticated, upload.single('img_perfil'), new UpdatePetController_1.UpdatePetController().handle);
router.delete('/api/deleteBlog', isAuthenticated_1_1.isAuthenticated, new DeleteBlogController_1.DeleteBlogController().handle);
router.delete('/api/deleteUser', isAuthenticated_1_1.isAuthenticated, new UserDeleteController_1.UserDeleteController().handle);
router.put('/api/UpdateBlog', isAuthenticated_1_1.isAuthenticated, new UpdateBlogController_1.UpdateBlogController().handle);
