generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  name        String
  email       String
  password    String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())
  bairro      String?
  cep         String?
  cidade      String?
  complemento String?
  cpfcnpj     String?
  endereco    String?
  estado      String?
  numero      String?
  telefone    String?
  status      String?
  img_usuario String?
  pets        Pet[]
  expo_token  ExpoToken[]
  user_id     Agendamentos[]
  vacinas     Vacina[]


  @@map("users")
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  products   Product[]

  @@map("categories")
}

model Product {
  id          String    @id @default(uuid())
  name        String
  price       String
  description String
  banner      String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())
  category_id String
  items       Item[]
  category    Category  @relation(fields: [category_id], references: [id])

  @@index([category_id], map: "products_category_id_fkey")
  @@map("products")
}

model Order {
  id         String    @id @default(uuid())
  table      Int
  status     Boolean   @default(false)
  draft      Boolean   @default(true)
  name       String?
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  items      Item[]

  @@map("orders")
}

model Item {
  id         String    @id @default(uuid())
  amount     Int
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  order_id   String
  product_id String
  order      Order     @relation(fields: [order_id], references: [id])
  product    Product   @relation(fields: [product_id], references: [id])

  @@index([order_id], map: "items_order_id_fkey")
  @@index([product_id], map: "items_product_id_fkey")
  @@map("items")
}

model Pet {
  id              String   @id @default(uuid())
  name            String
  apelido         String
  data_nascimento DateTime? @default(now())
  especie         String
  idade           String
  meses           String
  raca            String
  chip            String
  sexo            String
  temperamento    String
  tamanho         String
  detalhes        String? @db.LongText
  user_id         String
  img_perfil      String
  user            User      @relation(fields: [user_id], references: [id])
  vacinas         Vacina[]
  exames          Exame[]
  publicacos      Publicacoes[]
  agendamentos    Agendamentos[]

  @@index([user_id], map: "pets_user_id_fkey")
  @@map("pets")
}

model Curiosidade {
  id       String @id @default(uuid())
  conteudo String @db.LongText

  @@map("curiosidades")
}

model Vacina {
  id             String @id @default(uuid())
  data_vacinacao String
  vacina         String
  clinica        String
  intervalo      String
  observacao     String
  pet_id         String
  user_id        String
  img_lote       String
  proxima_aplicacao String?
  notificacoes_enviadas String @default("")
  pets            Pet    @relation(fields: [pet_id], references: [id])
  user           User   @relation(fields: [user_id], references: [id])
  @@index([user_id], map: "vacinas_user_id_fkey")
  @@index([pet_id], map: "vacinas_pet_id_fkey")
  @@map("vacinas")
}

model Exame {
  id         String    @id @default(uuid())
  data_exame String @db.VarChar(200)
  exame      String @db.VarChar(200)
  clinica    String @db.VarChar(200)
  observacao String @db.VarChar(200)
  pet_id     String @db.VarChar(200)
  img_laudo  String @db.VarChar(200)
  pet            Pet    @relation(fields: [pet_id], references: [id])
  @@index([pet_id], map: "exame_pet_id_fkey")
  @@map("exames")
}

model Publicacoes {
  id    String @id @default(uuid())
  pet_id String
  conteudo String @db.LongText
  img_blog String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  pet Pet @relation(fields: [pet_id], references: [id])
  @@index([pet_id], map: "publicacao_pet_id_fkey")
  @@map("publicacoes")
}

model Agendamentos {
  id             String    @id @default(uuid())
  pet_id         String
  id_horario     String
  id_clinica     String
  id_veterinario String
  id_servico     String
  user_id        String
  data_agendamento String
  horario_agendamento String
  status         Int       @default(1)
  notificacoes_enviadas String  @default("")
  pets            Pet       @relation(fields: [pet_id], references: [id])
  users           User      @relation(fields: [user_id], references: [id])
  horarios        Horarios  @relation(fields: [id_horario], references: [id])
  clinicas        Clinica   @relation(fields: [id_clinica], references: [id])
  veterinarios    Veterinarios @relation(fields: [id_veterinario], references: [id])
  servicos        Servicos  @relation(fields: [id_servico], references: [id])
  @@index([pet_id], map: "agendamento_pet_id_fkey")
  @@index([user_id], map: "agendamento_user_id_fkeyge")
  @@index([id_horario], map: "agendamento_id_horario_fkey")
  @@index([id_clinica], map: "agendamento_id_clinica_fkey")
  @@index([id_servico], map: "agendamento_id_servico_fket")
  @@map("agendamentos")
}

model Horarios {
  id String @id @default(uuid())
  seq_id Int @unique
  id_clinica String
  data_servico String
  horario_servico String
  id_servico String
  status Int
  id_veterinario String
  clinicas    Clinica @relation(fields: [id_clinica], references: [id])
  servico     Servicos @relation(fields: [id_servico], references: [id])
  veterinario Veterinarios @relation(fields: [id_veterinario], references: [id])
  agendamentos Agendamentos[]
  
  @@map("horarios")
}

model Empresa {
  id String @id @default(uuid())
  cnpj String
  nome String

  @@map("empresa")
}

model ExpoToken {
  id String @id @default(uuid())
  user_id String @unique
  token String
  created_at DateTime? @default(now())
  user            User      @relation(fields: [user_id], references: [id])
  @@map("expo_token")
}

model Clinica {
  id String @id @default(uuid())
  responsavel String
  razaoSocial String
  password String
  email String
  telefone String
  cnjp String
  cep String
  endereco String
  numero String
  uf String
  cidade String
  complemento String?
  img_clinica String?
  status         Int       @default(1)
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())
  @@map("clinicas")
  veterinarios Veterinarios[]
  agendamentos Agendamentos[]
  horarios Horarios[]
  servicos Servicos[]
}

model Servicos {
  id          String   @id @default(uuid())
  seq_id      Int
  servico     String
  tempo       String
  clinica_id  String
  status      Int      @default(1)
  created_at  DateTime @default(now())
  clinica     Clinica  @relation(fields: [clinica_id], references: [id])
  agendamentos Agendamentos[]
  horarios Horarios[]

  @@map("servicos")
}


model Veterinarios {
  id String @id @default(uuid())
  seq_id Int @unique
  nome String
  email String
  telefone String
  crmv String
  cpf String
  clinica_id String
  status         Int       @default(1)
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())
  clinica Clinica @relation(fields: [clinica_id], references: [id])
  horarios Horarios[]
  receitas Receitas[]
  agendamentos Agendamentos[]
  
  @@map("veterinarios")
}


model ConfigAgenda {
  id           String   @id @default(uuid())
  id_clinica   String
  dia_semana   Int  
  inicio_turno String   
  fim_turno    String   
  servico      Int      
  ignorar_horarios  String   @default("")
  created_at   DateTime @default(now())

  @@map("configAgenda")
}

model Receitas {
  id             String @id @default(uuid())
  tutorNome      String
  tutorCPF       String
  petNome        String
  especie        String
  raca           String
  sexo           String
  peso           String
  uso            String
  pdfUrl         String
  id_veterinario String
  dataCriacao    DateTime @default(now())
  veterinario Veterinarios @relation(fields: [id_veterinario], references: [id])

  @@map("receitas")
}